{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivana\\\\Desktop\\\\FTN\\\\IV\\\\ISA\\\\frontend\\\\src\\\\views\\\\examples\\\\ClinicPage.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Paper Kit React - v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\r\n\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React, { Component } from \"react\";\nimport axios from 'axios'; // reactstrap components\n\nimport { Button, Label, Form, FormGroup, Input, Modal, NavItem, NavLink, Nav, TabContent, TabPane, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport ExamplesNavbar from 'components/Navbars/ExamplesNavbar.js';\nimport ProfilePageHeader from 'components/Headers/ProfilePageHeader.js';\nimport DemoFooter from 'components/Footers/DemoFooter.js';\n\nclass ClinicPage extends Component {\n  constructor(props) {\n    super(props);\n    this.doc = document.documentElement.classList.remove(\"nav-open\");\n\n    this.addRoom = event => {\n      event.preventDefault();\n      let number = this.state.roomNumber;\n      let name = this.state.roomName;\n      let ok = true;\n\n      if (number === undefined || number === '') {\n        this.setState({\n          roomNumVal: \"Broj sale je obavezno polje\"\n        });\n        ok = false;\n      } else if (number <= 0) {\n        this.setState({\n          roomNumVal: \"Broj sale mora biti pozitivan.\"\n        });\n        ok = false;\n      } else this.setState({\n        roomNumVal: \"\"\n      });\n\n      if (name === undefined || name === '') {\n        this.setState({\n          roomNameVal: \"Naziv sale je obavezno polje\"\n        });\n        ok = false;\n      } else this.setState({\n        roomNameVal: \"\"\n      });\n\n      if (ok) {\n        let data = {\n          \"name\": this.state.roomName,\n          \"number\": this.state.roomNumber\n        };\n        this.state.rooms.push(data);\n        this.setState({\n          newRoomShow: false\n        });\n        this.setState({\n          roomVal: \"\"\n        });\n      }\n    };\n\n    this.addClinic = event => {\n      event.preventDefault();\n      let name = this.state.name;\n      let city = this.state.city;\n      let address = this.state.address;\n      let ok = true;\n\n      if (name === undefined || name === '') {\n        this.setState({\n          clinicNameVal: \"Naziv klinike je obavezno polje.\"\n        });\n        ok = false;\n      } else if (!name[0].match('[A-Z0-9]')) {\n        this.setState({\n          clinicNameVal: \"Naziv klinike mora pocinjati velikim slovom ili brojem.\"\n        });\n        ok = false;\n      } else this.setState({\n        clinicNameVal: \"\"\n      });\n\n      if (city === undefined || city === '') {\n        this.setState({\n          cityVal: \"Naziv grada je obavezno polje.\"\n        });\n        ok = false;\n      } else if (!city[0].match('[A-Z]')) {\n        this.setState({\n          cityVal: \"Naziv grada mora pocinjati velikim slovom.\"\n        });\n        ok = false;\n      } else this.setState({\n        cityVal: \"\"\n      });\n\n      if (address === undefined || address === '') {\n        this.setState({\n          addressVal: \"Adresa klinike je obavezno polje.\"\n        });\n        ok = false;\n      } else if (!address[0].match('[A-Z]')) {\n        this.setState({\n          addressVal: \"Adresa mora pocinjati velikim slovom.\"\n        });\n        ok = false;\n      } else this.setState({\n        addressVal: \"\"\n      });\n\n      if (this.state.rooms.length == 0) {\n        ok = false;\n        this.setState({\n          roomVal: \"Klinika mora imati bar jednu salu.\"\n        });\n      }\n\n      if (ok) {\n        let data = {\n          \"name\": this.state.name,\n          \"city\": this.state.city,\n          \"address\": this.state.address,\n          \"rooms\": this.state.rooms\n        };\n        axios({\n          method: 'post',\n          url: 'http://localhost:8088/clinic',\n          data: JSON.stringify(data)\n        }).then(response => {\n          console.log(response);\n          alert(response.data);\n        }, error => {\n          console.log(error);\n        });\n        this.setState({\n          registerShow: false\n        });\n      }\n    };\n\n    this.state = {\n      newRoomShow: false,\n      name: \"\",\n      city: \"\",\n      address: \"\",\n      rooms: [],\n      roomName: \"\",\n      roomNumber: undefined,\n      roomNumVal: \"\",\n      roomNameVal: \"\",\n      clinicNameVal: \"\",\n      cityVal: \"\",\n      addressVal: \"\",\n      roomVal: \"\"\n    };\n    this.addClinic = this.addClinic.bind(this);\n    this.addRoom = this.addRoom.bind(this);\n  }\n\n  deleteRoom(name, e) {\n    const items = this.state.rooms.filter(room => room.name !== name);\n    this.setState({\n      rooms: items\n    });\n  }\n\n  roomNumberValidation(e) {\n    this.setState({\n      roomNumber: e.target.value\n    });\n    let number = e.target.value;\n    if (number === undefined || number === '') this.setState({\n      roomNumVal: \"Broj sale je obavezno polje\"\n    });else if (number <= 0) this.setState({\n      roomNumVal: \"Broj sale mora biti pozitivan.\"\n    });else this.setState({\n      roomNumVal: \"\"\n    });\n  }\n\n  roomNameValidation(e) {\n    this.setState({\n      roomName: e.target.value\n    });\n    let name = e.target.value;\n    if (name === undefined || name === '') this.setState({\n      roomNameVal: \"Naziv sale je obavezno polje.\"\n    });else this.setState({\n      roomNameVal: \"\"\n    });\n  }\n\n  clinicNameValidation(e) {\n    this.setState({\n      name: e.target.value\n    });\n    let name = e.target.value;\n    if (name === undefined || name === '') this.setState({\n      clinicNameVal: \"Naziv klinike je obavezno polje.\"\n    });else if (!name[0].match('[A-Z0-9]')) this.setState({\n      clinicNameVal: \"Naziv klinike mora pocinjati velikim slovom ili brojem.\"\n    });else this.setState({\n      clinicNameVal: \"\"\n    });\n  }\n\n  cityValidation(e) {\n    this.setState({\n      city: e.target.value\n    });\n    let city = e.target.value;\n    if (city === undefined || city === '') this.setState({\n      cityVal: \"Naziv grada je obavezno polje.\"\n    });else if (!city[0].match('[A-Z]')) this.setState({\n      cityVal: \"Naziv grada mora pocinjati velikim slovom.\"\n    });else this.setState({\n      cityVal: \"\"\n    });\n  }\n\n  addressValidation(e) {\n    this.setState({\n      address: e.target.value\n    });\n    let address = e.target.value;\n    if (address === undefined || address === '') this.setState({\n      addressVal: \"Adresa klinike je obavezno polje.\"\n    });else if (!address[0].match('[A-Z]')) this.setState({\n      addressVal: \"Adresa mora pocinjati velikim slovom.\"\n    });else this.setState({\n      addressVal: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(ExamplesNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(ProfilePageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"section profile-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"ml-auto mr-auto\",\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Nova klinika\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      modalClassName: \"modal-register\",\n      isOpen: this.state.newRoomShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header no-border-header text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: () => this.setState({\n        newRoomShow: false,\n        roomNumVal: \"\",\n        roomNameVal: \"\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"h3\", {\n      className: \"title mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Nova sala\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.addRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Naziv\"), React.createElement(Input, {\n      name: \"roomName\",\n      type: \"text\",\n      onChange: event => this.roomNameValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.state.roomNameVal)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Broj\"), React.createElement(Input, {\n      name: \"roomNumber\",\n      type: \"number\",\n      onChange: event => this.roomNumberValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.roomNumVal)), React.createElement(Button, {\n      block: true,\n      className: \"btn-round\",\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Dodaj salu\")))), React.createElement(Form, {\n      onSubmit: this.addClinic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Naziv:\"), React.createElement(Input, {\n      name: \"name\",\n      type: \"text\",\n      onChange: event => this.clinicNameValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.clinicNameVal)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Grad:\"), React.createElement(Input, {\n      name: \"city\",\n      type: \"text\",\n      onChange: event => this.cityValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, this.state.cityVal)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Adresa\"), React.createElement(Input, {\n      name: \"address\",\n      type: \"text\",\n      onChange: event => this.addressValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.addressVal)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Sale:\"), React.createElement(Label, {\n      name: \"rooms\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), \" \", React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.state.rooms.map(room => React.createElement(\"li\", {\n      key: room.name,\n      className: \"list-group-item list-group-item-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, room.name, \" - \", room.number, React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: e => this.deleteRoom(room.name, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"\\xD7\"))))), React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, this.state.roomVal), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"default\",\n      outline: true,\n      onClick: event => this.setState({\n        newRoomShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), \" Nova sala\")), React.createElement(Button, {\n      block: true,\n      className: \"btn-round\",\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Dodaj kliniku\"))))), React.createElement(DemoFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ClinicPage;","map":{"version":3,"sources":["C:/Users/Ivana/Desktop/FTN/IV/ISA/frontend/src/views/examples/ClinicPage.js"],"names":["React","Component","axios","Button","Label","Form","FormGroup","Input","Modal","NavItem","NavLink","Nav","TabContent","TabPane","Container","Row","Col","ExamplesNavbar","ProfilePageHeader","DemoFooter","ClinicPage","constructor","props","doc","document","documentElement","classList","remove","addRoom","event","preventDefault","number","state","roomNumber","name","roomName","ok","undefined","setState","roomNumVal","roomNameVal","data","rooms","push","newRoomShow","roomVal","addClinic","city","address","clinicNameVal","match","cityVal","addressVal","length","method","url","JSON","stringify","then","response","console","log","alert","error","registerShow","bind","deleteRoom","e","items","filter","room","roomNumberValidation","target","value","roomNameValidation","clinicNameValidation","cityValidation","addressValidation","render","color","map"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Paper Kit React - v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\r\n\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React , {Component} from \"react\";\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Label,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  TabContent,\r\n  TabPane,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport ExamplesNavbar from 'components/Navbars/ExamplesNavbar.js';\r\nimport ProfilePageHeader from 'components/Headers/ProfilePageHeader.js';\r\nimport DemoFooter from 'components/Footers/DemoFooter.js';\r\n\r\nclass ClinicPage extends Component {\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = {\r\n        newRoomShow: false,\r\n        name: \"\" ,\r\n        city: \"\" ,\r\n        address: \"\" ,\r\n        rooms: [],\r\n        roomName: \"\",\r\n        roomNumber: undefined,\r\n        roomNumVal: \"\",\r\n        roomNameVal: \"\",\r\n        clinicNameVal: \"\",\r\n        cityVal: \"\",\r\n        addressVal: \"\",\r\n        roomVal: \"\",\r\n      };\r\n\r\n      this.addClinic = this.addClinic.bind(this) ;\r\n      this.addRoom = this.addRoom.bind(this);\r\n    }\r\n    deleteRoom(name, e){\r\n        const items = this.state.rooms.filter(room => room.name !== name);\r\n        this.setState({ rooms: items });\r\n    };\r\n    roomNumberValidation(e){\r\n        this.setState({roomNumber:e.target.value})\r\n        let number = e.target.value;\r\n        if (number === undefined || number === '')\r\n            this.setState({roomNumVal:\"Broj sale je obavezno polje\"})\r\n        else if (number <= 0)\r\n            this.setState({roomNumVal:\"Broj sale mora biti pozitivan.\"})\r\n        else\r\n            this.setState({roomNumVal:\"\"})\r\n    };\r\n\r\n    roomNameValidation(e){\r\n        this.setState({roomName:e.target.value})\r\n        let name = e.target.value;\r\n        if (name === undefined || name === '')\r\n            this.setState({roomNameVal:\"Naziv sale je obavezno polje.\"})\r\n        else\r\n            this.setState({roomNameVal:\"\"})\r\n    };\r\n\r\n    clinicNameValidation(e){\r\n        this.setState({name:e.target.value})\r\n        let name = e.target.value;\r\n        if (name === undefined || name === '')\r\n            this.setState({clinicNameVal:\"Naziv klinike je obavezno polje.\"})\r\n        else if(!name[0].match('[A-Z0-9]'))\r\n            this.setState({clinicNameVal:\"Naziv klinike mora pocinjati velikim slovom ili brojem.\"})\r\n        else\r\n            this.setState({clinicNameVal:\"\"})\r\n    };\r\n\r\n    cityValidation(e){\r\n        this.setState({city:e.target.value})\r\n        let city = e.target.value;\r\n        if (city === undefined || city === '')\r\n            this.setState({cityVal:\"Naziv grada je obavezno polje.\"})\r\n        else if(!city[0].match('[A-Z]'))\r\n            this.setState({cityVal:\"Naziv grada mora pocinjati velikim slovom.\"})\r\n        else\r\n            this.setState({cityVal:\"\"})\r\n    };\r\n\r\n    addressValidation(e){\r\n        this.setState({address:e.target.value})\r\n        let address = e.target.value;\r\n        if (address === undefined || address === '')\r\n            this.setState({addressVal:\"Adresa klinike je obavezno polje.\"})\r\n        else if(!address[0].match('[A-Z]'))\r\n            this.setState({addressVal:\"Adresa mora pocinjati velikim slovom.\"})\r\n        else\r\n            this.setState({addressVal:\"\"})\r\n    };\r\n\r\n    doc = document.documentElement.classList.remove(\"nav-open\");\r\n\r\n    addRoom = event => {\r\n        event.preventDefault();\r\n\r\n        let number = this.state.roomNumber;\r\n        let name = this.state.roomName;\r\n        let ok = true;\r\n\r\n        if (number === undefined || number === ''){\r\n            this.setState({roomNumVal:\"Broj sale je obavezno polje\"})\r\n            ok = false;\r\n        }\r\n        else if (number <= 0){\r\n            this.setState({roomNumVal:\"Broj sale mora biti pozitivan.\"})\r\n            ok = false;\r\n        }\r\n        else\r\n            this.setState({roomNumVal:\"\"})\r\n        \r\n        if (name === undefined || name === ''){\r\n            this.setState({roomNameVal:\"Naziv sale je obavezno polje\"})\r\n            ok = false;\r\n        }\r\n        else\r\n            this.setState({roomNameVal:\"\"})\r\n        \r\n        if(ok){\r\n            let data = {\r\n            \"name\": this.state.roomName ,\r\n            \"number\": this.state.roomNumber ,\r\n            };        \r\n            this.state.rooms.push(data)\r\n            this.setState({newRoomShow: false});\r\n            this.setState({roomVal:\"\"})\r\n        }\r\n  };\r\n\r\n    addClinic = event => {\r\n        event.preventDefault();\r\n\r\n        let name = this.state.name;\r\n        let city = this.state.city;\r\n        let address = this.state.address;\r\n        let ok = true;\r\n\r\n        if (name === undefined || name === ''){\r\n            this.setState({clinicNameVal:\"Naziv klinike je obavezno polje.\"})\r\n            ok = false;\r\n        }\r\n        else if(!name[0].match('[A-Z0-9]')){\r\n            this.setState({clinicNameVal:\"Naziv klinike mora pocinjati velikim slovom ili brojem.\"})\r\n            ok = false;\r\n        }\r\n        else\r\n            this.setState({clinicNameVal:\"\"})\r\n\r\n        if (city === undefined || city === ''){\r\n            this.setState({cityVal:\"Naziv grada je obavezno polje.\"})\r\n            ok = false;\r\n        }\r\n         else if(!city[0].match('[A-Z]')){\r\n             this.setState({cityVal:\"Naziv grada mora pocinjati velikim slovom.\"})\r\n             ok = false;\r\n         }\r\n         else\r\n             this.setState({cityVal:\"\"})\r\n\r\n        if (address === undefined || address === ''){\r\n             this.setState({addressVal:\"Adresa klinike je obavezno polje.\"})\r\n             ok = false;\r\n        }\r\n         else if(!address[0].match('[A-Z]')){\r\n             this.setState({addressVal:\"Adresa mora pocinjati velikim slovom.\"})\r\n             ok = false;\r\n         }\r\n         else\r\n             this.setState({addressVal:\"\"})\r\n         \r\n         if (this.state.rooms.length == 0){\r\n             ok = false;\r\n             this.setState({roomVal:\"Klinika mora imati bar jednu salu.\"})\r\n         }\r\n\r\n        if (ok){\r\n            let data = {\r\n            \"name\": this.state.name ,\r\n            \"city\": this.state.city ,\r\n            \"address\": this.state.address ,\r\n            \"rooms\": this.state.rooms\r\n            };\r\n\r\n            axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8088/clinic',\r\n            data: JSON.stringify(data)\r\n            }).then((response) => {\r\n                console.log(response);\r\n                alert(response.data)\r\n            }, (error) => {\r\n            console.log(error);\r\n            });\r\n\r\n            this.setState({registerShow: false});\r\n        }\r\n  };\r\n  \r\n\r\n  render(){\r\n      return(\r\n        <>\r\n        <ExamplesNavbar />\r\n        <ProfilePageHeader />\r\n        <div className=\"section profile-content\">\r\n        <Container>\r\n            <Col className=\"ml-auto mr-auto\" md=\"6\">\r\n                <h3>Nova klinika</h3>\r\n                <br></br>\r\n                <br></br>\r\n                <Modal modalClassName=\"modal-register\" isOpen={this.state.newRoomShow}>\r\n      \r\n                <div className=\"modal-header no-border-header text-center\">\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => this.setState({newRoomShow: false, roomNumVal:\"\", roomNameVal:\"\"})}\r\n                    >\r\n                    <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                    <h3 className=\"title mx-auto\">Nova sala</h3>\r\n                </div>\r\n                <div className=\"modal-body\">                       \r\n                        <Form onSubmit={this.addRoom}>\r\n                            <FormGroup>\r\n                            <label>Naziv</label>\r\n                            <Input name=\"roomName\" type=\"text\" onChange={(event) => this.roomNameValidation(event)} />\r\n                            <p style={{color:'red'}}>{this.state.roomNameVal}</p>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <label>Broj</label>\r\n                            <Input name=\"roomNumber\" type=\"number\" onChange={(event) => this.roomNumberValidation(event)} />\r\n                            <p style={{color:'red'}}>{this.state.roomNumVal}</p>\r\n                            </FormGroup>           \r\n                            <Button block className=\"btn-round\" color=\"info\">\r\n                                 Dodaj salu\r\n                            </Button>\r\n                            </Form>\r\n                </div>\r\n                </Modal>\r\n                <Form onSubmit={this.addClinic}>\r\n                  <FormGroup>\r\n                  <label>Naziv:</label>\r\n                  <Input name=\"name\" type=\"text\" onChange={(event) => this.clinicNameValidation(event)} />\r\n                  <p style={{color:'red'}}>{this.state.clinicNameVal}</p>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                  <label>Grad:</label>\r\n                  <Input name=\"city\" type=\"text\" onChange={(event) => this.cityValidation(event)} />\r\n                  <p style={{color:'red'}}>{this.state.cityVal}</p>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                  <label>Adresa</label>\r\n                  <Input name=\"address\" type=\"text\" onChange={(event) => this.addressValidation(event)} />\r\n                  <p style={{color:'red'}}>{this.state.addressVal}</p>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                  <label>Sale:</label>\r\n                            <Label  name=\"rooms\" type=\"text\" /> <ul className=\"list-group\">\r\n                    {this.state.rooms.map(room => (\r\n                        <li \r\n                        key={room.name}\r\n                        className=\"list-group-item list-group-item-primary\"\r\n                        >\r\n                        {room.name} - {room.number}\r\n                        <button\r\n                            aria-label=\"Close\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            type=\"button\"\r\n                            onClick={(e) => this.deleteRoom(room.name, e)}\r\n                        >\r\n                        <span aria-hidden={true}>×</span>\r\n                        </button>\r\n                        </li>\r\n                    ))}\r\n                    </ul>\r\n                    <p style={{color:'red'}}>{this.state.roomVal}</p>\r\n                  <Button className=\"btn-round\" color=\"default\" outline onClick={event => this.setState({newRoomShow: true})}>\r\n                    <i className=\"fa fa-cog\" /> Nova sala\r\n                  </Button>\r\n                  </FormGroup>\r\n         \r\n                  <Button block className=\"btn-round\" color=\"info\" >\r\n                    Dodaj kliniku\r\n                  </Button>\r\n                  </Form>\r\n            </Col>\r\n            \r\n        </Container>\r\n      </div>\r\n      <DemoFooter />\r\n    </>\r\n  )};\r\n}\r\n\r\nexport default ClinicPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}